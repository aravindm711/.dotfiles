snippet initcpp "C++ template for cp" b
# include <bits/stdc++.h>
using namespace std;
# define looptc                 int t, c=0; cin >> t; while(t--&&++c)
# define ln                     "\n"
# define ll                     long long

$2

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    freopen("_input.txt", "r+", stdin);

    $1

    cout << endl;
    return 0;
}
endsnippet

snippet fgcd "Return long long gcd of numbers a and b" b
long long findgcd(long long a, long long b) {
	while (b) {
		a %= b;
		b ^= a;
		a ^= b;
		b ^= a;
	}
	return a;
}
endsnippet

snippet isprime "Check if number is prime" b
bool isprime(long long a) {
	long long cnt = 0, asqrt = sqrt(a);
	for (long long i=2; i<asqrt; ++i)
		if (a%i == 0)
			++cnt;
	
	return (cnt >= 1: false? true);
}
endsnippet

snippet getprimes "Get a list of Primes using sieve of eratosthenes" b
bool* getprimes(long long x) {
	bool primes_list = (bool*)malloc(x * sizeof(bool));
	memeset(primes_list, true, x);
	long long xsqrt = sqrt(x);
	for (int p=2; p<xsqrt; ++p)
		if (primes_list[p])
			for (int i=p*p; i<x; i+=p)
				primes_list[i] = false;

	return primes_list;
}
endsnippet
